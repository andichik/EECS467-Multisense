//
//  SensorController.swift
//  MayApp
//
//  Created by Russell Ladd on 2/5/17.
//  Copyright Â© 2017 University of Michigan. All rights reserved.
//

import Foundation
import MayAppCommon

final class LaserController {
    
    private final class ContinuousMeasurement {
        
        //let laserPath = "/dev/tty.usbmodemFA131" // Russell
        //let laserPath = "/dev/cu.usbmodem1421" // Jasmine
        //let laserPath = "/dev/cu.usbmodem1441" // Colin
        //let laserPath = "/dev/cu.usbmodem14521" // Colin
        let laserPath = "/dev/cu.usbmodem14211" //Jasmine extension

        var urg = urg_t()
        
        let activity: NSObjectProtocol
        
        var timer: Timer!
        
        init(scanInterval: TimeInterval, block: @escaping (Data) -> Void) {
            
            // Register this activity with the system to ensure our app gets resource priority and is not put into App Nap
            activity = ProcessInfo.processInfo.beginActivity(options: [.idleDisplaySleepDisabled, .userInitiated, .latencyCritical], reason: "Streaming laser scans to remote.")
            
            guard urg_open(&urg, URG_SERIAL, laserPath, 115200) == 0 else {
                
                // Short circuit path in case laser is not connected
                
                /*let distances = (0..<Laser.sampleCount).map { index -> UInt16 in
                    
                    let angle = Laser.angleStart + Float(index) * Laser.angleIncrement
                    
                    let distance: Float //= 4.0 + cos(6.0 * angle)
                    
                    if angle < -.pi / 4.0 {
                        distance = -1.0 / sin(angle)
                    } else if angle < atan2(-2.0, 3.0) {
                        distance = -2.0 / sin(angle)
                    } else if angle < atan2(2.0, 3.0) {
                        distance = 3.0 / cos(angle)
                    } else if angle < .pi / 4.0 {
                        distance = 2.0 / sin(angle)
                    } else {
                        distance = 1.0 / sin(angle)
                    }
                    
                    return UInt16(distance * 2 * 1000)
                }*/
                
                //let distancesRaw = [2580, 2588, 2612, 2613, 2618, 2629, 2632, 2655, 2672, 2676, 2688, 2711, 2723, 2723, 2723, 2579, 2499, 2473, 2456, 2446, 2427, 2416, 2416, 2413, 2413, 2400, 2391, 2387, 2381, 2381, 2384, 2381, 2382, 2382, 2382, 2382, 2389, 2400, 2408, 2408, 2410, 2419, 2436, 2445, 2458, 2467, 2487, 2526, 2722, 2751, 2751, 2751, 2751, 2744, 2729, 2712, 2708, 2707, 2702, 2700, 2690, 2686, 2681, 2675, 2674, 2666, 2656, 2654, 2647, 2639, 2634, 2633, 2625, 2623, 2615, 2610, 2610, 2595, 2594, 2591, 2584, 2581, 2581, 2575, 2560, 2550, 2503, 2157, 1608, 1547, 1539, 1537, 1537, 1537, 1539, 1551, 1568, 1582, 1602, 1622, 1636, 1656, 1680, 1721, 1740, 1750, 1779, 1799, 1837, 1863, 1890, 1910, 1941, 1983, 2003, 2046, 2070, 2106, 2139, 2188, 2219, 2253, 2314, 2346, 2440, 2958, 3046, 3106, 3185, 3250, 3320, 3418, 5786, 5786, 5776, 5775, 5772, 5757, 5757, 5757, 5745, 5737, 5733, 5733, 5739, 5741, 5739, 5746, 5744, 5744, 5739, 5739, 5740, 5746, 5740, 5737, 5736, 5729, 5717, 5717, 5727, 5727, 5722, 5722, 5720, 5720, 5704, 5696, 5634, 5114, 5085, 5085, 5089, 5233, 5233, 5596, 5596, 5707, 5723, 5750, 5797, 5804, 5797, 5795, 5748, 5705, 5705, 5728, 5728, 5728, 1, 5688, 5688, 5902, 5909, 6483, 6535, 6543, 7718, 7718, 7009, 7009, 6992, 6992, 6860, 2410, 2403, 2403, 2403, 2403, 2403, 2409, 2411, 2412, 2412, 2417, 2417, 2419, 2420, 2422, 2427, 2428, 2432, 2434, 2439, 2439, 2441, 2441, 2449, 2450, 2452, 2453, 2453, 2461, 2464, 2468, 2469, 2469, 2475, 2480, 2480, 2480, 2481, 2488, 2496, 2506, 2509, 2510, 2510, 2511, 2520, 2529, 2536, 2536, 2537, 2541, 2548, 2555, 2555, 2556, 2558, 2567, 2574, 2578, 2579, 2587, 2593, 2595, 2605, 2608, 2612, 2615, 2620, 2624, 2632, 2640, 2642, 2649, 2653, 2657, 2666, 2671, 2683, 2691, 2691, 2695, 2700, 2701, 2729, 2734, 2748, 2760, 2763, 2764, 2764, 2773, 2802, 2803, 2807, 2812, 2812, 2812, 2803, 2784, 2772, 2753, 2737, 2717, 2693, 2674, 2664, 2649, 2631, 2619, 2599, 2595, 2569, 2558, 2525, 2517, 2497, 2496, 2480, 2465, 2446, 2445, 2428, 2425, 2396, 2388, 2376, 2366, 2354, 2344, 2333, 2314, 2301, 2287, 2279, 2267, 2260, 2255, 2252, 2234, 2222, 2210, 2203, 2175, 2174, 2165, 2161, 2151, 2140, 2135, 2116, 2109, 2097, 2084, 2078, 2063, 2063, 2056, 2045, 2045, 2039, 2024, 2011, 2001, 1997, 1995, 1987, 1979, 1976, 1962, 1962, 1962, 1982, 1990, 2003, 2014, 2020, 2023, 2031, 2053, 2064, 2071, 2095, 2103, 2118, 2123, 2146, 2160, 2165, 2177, 2204, 2214, 2228, 2233, 2255, 2275, 2293, 2314, 2322, 2332, 2353, 2376, 2395, 2416, 2416, 2445, 2455, 2479, 2505, 2523, 2542, 2549, 2565, 2599, 2620, 2646, 2661, 2686, 2707, 2727, 2746, 2767, 2791, 2821, 2861, 2875, 2898, 2939, 2946, 2976, 3015, 3039, 3080, 3116, 3153, 3173, 3211, 3231, 3271, 3315, 3348, 3388, 3423, 3458, 3484, 3520, 3565, 3612, 3643, 3696, 3734, 3790, 3839, 3877, 3940, 4011, 4049, 4106, 4106, 4106, 2641, 2641, 2638, 2638, 2638, 2624, 2594, 2488, 2456, 2443, 2441, 2373, 2365, 2365, 2365, 2369, 2393, 8650, 8650, 8633, 8631, 8631, 8631, 8614, 8607, 8592, 8583, 8575, 8575, 8569, 8574, 8565, 8574, 8583, 8583, 1, 1, 1, 1, 1, 1, 1, 1, 14020, 14020, 14005, 14003, 14001, 13802, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14711, 14711, 14671, 14662, 14662, 14664, 14664, 14661, 14661, 14661, 14675, 14676, 14682, 14682, 14684, 14689, 14711, 14728, 14731, 14738, 14738, 14420, 14021, 14021, 14039, 14039, 2139, 2087, 2087, 2087, 2082, 2079, 2077, 2072, 2072, 2072, 2095, 2100, 2135, 2165, 2171, 2171, 2176, 2176, 2183, 2183, 2183, 2185, 2218, 2263, 8865, 8867, 8868, 8868, 5258, 5200, 5123, 5045, 4964, 4905, 4869, 4865, 4865, 4869, 4865, 4865, 4821, 4776, 4721, 4624, 4544, 4451, 3953, 3899, 3865, 3831, 3781, 3726, 3683, 3637, 3581, 3533, 3494, 3461, 3438, 3393, 3346, 3302, 3272, 3246, 3205, 3183, 3131, 3107, 3086, 3034, 3016, 2987, 2955, 2900, 2883, 2856, 2842, 2816, 2775, 2750, 2726, 2705, 2688, 2672, 2628, 2616, 2600, 2569, 2552, 2533, 2512, 2495, 2469, 2449, 2422, 2417, 2390, 2379, 2359, 2350, 2330, 2311, 2292, 2289, 2260, 2252, 2252, 2223, 2202, 2195, 2172, 2169, 2143, 2140, 2122, 2102, 2083, 2073, 2069, 2053, 2044, 2021, 2017, 1997, 1987, 1986, 1973, 1957, 1956, 1954, 1954, 1954, 1958, 1960, 1964, 1966, 1979, 1983, 1995, 2005, 2007, 2007, 2009, 2009, 2028, 2055, 2058, 2066, 2069, 2071, 2088, 2104, 2112, 2116, 2127, 2128, 2137, 2148, 2169, 2181, 2194, 2195, 2198, 2214, 2220, 2231, 2250, 2268, 2275, 2289, 2293, 2310, 2314, 2320, 2347, 2356, 2372, 2383, 2388, 2399, 2420, 2431, 2458, 2468, 2476, 2485, 2504, 2524, 2541, 2554, 2559, 2574, 2578, 2604, 2624, 2648, 2652, 2674, 2688, 2710, 2727, 2754, 2774, 2789, 2789, 2789, 2788, 2781, 2779, 2774, 2774, 2772, 2749, 2747, 2745, 2736, 2725, 2722, 2700, 2698, 2695, 2693, 2689, 2669, 2659, 2655, 2655, 2655, 2648, 2640, 2629, 2626, 2614, 2612, 2610, 2606, 2595, 2589, 2585, 2585, 2584, 2584, 2570, 2559, 2555, 2552, 2545, 2539, 2539, 2535, 2530, 2517, 2517, 2515, 2515, 2512, 2503, 2503, 2500, 2493, 2486, 2483, 2478, 2473, 2472, 2468, 2468, 2467, 2463, 2449, 2449, 2449, 2449, 2445, 2445, 2436, 2431, 2426, 2426, 2426, 2426, 2425, 2425, 2425, 2421, 2414, 2407, 2407, 2402, 2398, 2398, 2394, 2390, 2389, 2387, 2389, 2389, 2389, 2385, 2379, 2377, 2372, 2347, 2257, 2013, 1827, 1486, 1431, 1428, 1428, 1428, 1426, 1428, 1429, 1499, 1661, 1801, 2032, 2229, 4300, 4329, 4367, 4367, 4367, 4345, 4345, 4345, 4393, 4427, 4427, 4393, 4307, 4298, 4289, 4289, 4289, 4288, 4284, 4264, 4254, 3316, 3264, 3250, 3238, 3237, 3236, 3231, 3231, 3231, 3242, 3243, 4135, 4135, 4135, 4129, 4121, 4089, 3384, 3235, 3209, 3175, 3171, 3171, 3171, 3173, 3201, 3208, 3211, 3412, 4029, 5139, 5148, 5162, 5162, 5159, 5159, 5576, 5576, 5396, 4053, 4050, 4050, 4050, 4065, 4067, 4070, 5439, 5440, 5439, 5440, 5443, 5456, 5470, 5472, 5491, 5504, 5504, 1528, 1528, 1523, 1523, 1522, 1522, 1515, 1492, 1492, 1482, 1472, 1472, 1472, 1468, 1468, 1468, 1468, 1464, 1464, 1464, 1461, 1450, 1446, 1444, 1439, 1439, 1439, 1440, 1440, 1440, 1441, 1449, 1454, 1591, 1612, 1621, 1621, 1623, 1623, 1625, 1625, 1627, 1634, 1634, 1641, 1645, 1651, 1667, 1729, 1812, 2576, 2634, 2643, 2654, 2656, 2658, 2665, 2665, 2671, 2693, 2700, 2703, 2704, 2710, 2710, 2731, 2732, 2742, 2750, 2760, 2768, 2772, 2782, 2783, 2803, 2807, 2812, 2817, 2832, 2838, 2865, 2871, 2884, 2893, 2894, 2902, 2912, 2915, 2915, 2915, 2892, 2889, 2877, 2853, 2845, 2817, 2810, 2789, 2775, 2766, 2743, 2734, 2720, 2711, 2693, 2681, 2656, 2653, 2642, 2623, 2600, 2598, 2588, 2583, 2560, 2548, 2536, 2528, 2523, 2512, 2499, 2491, 2476, 2473, 2462, 2447, 2434, 2426, 2416]
                
                //let distancesRaw = [1909, 1913, 1913, 1913, 1909, 1901, 1891, 1890, 1878, 1867, 1866, 1856, 1852, 1833, 1832, 1831, 1821, 1811, 1808, 1789, 1788, 1787, 1784, 1773, 1771, 1769, 1755, 1751, 1750, 1750, 1737, 1729, 1727, 1717, 1716, 1715, 1715, 1701, 1699, 1694, 1687, 1684, 1683, 1682, 1668, 1668, 1666, 1659, 1654, 1647, 1646, 1643, 1641, 1634, 1634, 1629, 1617, 1612, 1611, 1607, 1605, 1603, 1602, 1600, 1585, 1581, 1581, 1579, 1576, 1576, 1576, 1561, 1557, 1557, 1557, 1549, 1549, 1548, 1543, 1543, 1533, 1533, 1530, 1530, 1528, 1528, 1524, 1520, 1520, 1518, 1513, 1508, 1508, 1506, 1506, 1494, 1494, 1493, 1492, 1492, 1492, 1489, 1488, 1483, 1475, 1473, 1473, 1475, 1477, 1477, 1477, 1467, 1464, 1464, 1464, 1464, 1460, 1451, 1451, 1451, 1451, 1451, 1452, 1452, 1447, 1444, 1449, 1444, 1444, 1442, 1445, 1438, 1445, 1446, 1446, 1431, 1431, 1428, 1428, 1428, 1432, 1432, 1434, 1434, 1431, 1427, 1424, 1424, 1424, 1424, 1419, 1417, 1417, 1417, 1417, 1414, 1425, 1414, 1411, 1414, 1411, 1411, 1416, 1416, 1411, 1411, 1411, 1411, 1417, 1417, 1418, 1418, 1418, 1416, 1418, 1416, 1413, 1413, 1408, 1408, 1413, 1413, 1414, 1417, 1417, 1419, 1416, 1416, 1416, 1417, 1417, 1422, 1422, 1422, 1422, 1425, 1427, 1427, 1427, 1425, 1425, 1425, 1426, 1430, 1433, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1437, 1440, 1445, 1445, 1446, 1446, 1446, 1450, 1453, 1454, 1459, 1459, 1457, 1460, 1460, 1459, 1460, 1467, 1467, 1467, 1474, 1475, 1479, 1481, 1481, 1481, 1481, 1481, 1485, 1486, 1496, 1496, 1496, 1496, 1496, 1499, 1510, 1510, 1505, 1510, 1505, 1505, 1517, 1517, 1524, 1531, 1534, 1534, 1534, 1534, 1534, 1538, 1539, 1550, 1553, 1553, 1557, 1558, 1567, 1567, 1569, 1569, 1570, 1579, 1590, 1593, 1593, 1597, 1600, 1605, 1605, 1605, 1610, 1612, 1615, 1624, 1634, 1637, 1643, 1643, 1644, 1650, 1652, 1668, 1670, 1670, 1673, 1685, 1687, 2905, 2907, 2911, 2921, 2937, 2944, 2961, 2961, 2973, 2991, 2998, 3004, 3009, 3010, 3030, 3034, 3044, 3064, 3088, 3090, 3091, 3111, 3124, 3125, 3139, 3140, 3148, 3166, 3189, 3198, 3224, 3239, 3242, 3257, 3267, 3276, 3288, 3305, 3308, 3340, 3342, 3356, 3375, 3376, 3396, 3416, 3431, 3444, 3453, 3483, 3489, 3489, 3489, 3484, 3450, 3429, 3411, 3402, 3377, 3371, 3356, 3332, 3320, 3308, 3297, 3294, 3289, 3267, 3266, 3246, 3229, 3224, 3218, 3209, 3207, 3207, 3207, 3233, 3249, 3276, 3289, 3309, 3312, 3347, 3376, 3376, 3376, 3369, 3364, 3346, 3337, 3322, 3306, 3301, 3301, 3284, 3276, 3259, 3245, 3244, 3238, 3223, 3215, 3214, 3205, 3189, 3188, 3176, 3169, 3158, 3158, 3141, 3131, 3129, 3122, 3115, 3109, 3107, 3091, 2971, 2877, 2859, 2859, 2859, 2871, 2875, 2898, 2927, 2930, 2945, 2967, 2969, 3003, 3016, 3035, 3057, 3073, 3089, 3100, 3130, 3137, 3163, 3180, 3188, 3209, 3222, 3256, 3279, 3309, 3324, 3339, 3372, 3396, 3405, 3434, 3467, 3483, 3504, 3529, 3561, 3561, 3561, 1, 1, 1, 1, 1, 1, 1, 1, 11414, 11414, 11419, 11419, 11388, 11388, 11368, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11022, 11174, 11174, 11151, 11143, 11141, 11141, 11159, 11220, 11607, 11676, 11695, 11676, 11673, 11657, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11741, 11792, 11792, 11778, 11094, 11084, 11094, 11103, 11103, 11107, 11092, 11072, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3408, 3408, 3408, 3389, 3357, 3333, 3313, 3272, 3229, 3192, 3175, 3158, 3131, 3092, 3069, 3028, 3009, 2994, 2956, 2931, 2905, 2887, 2866, 2838, 2817, 2809, 2771, 2757, 2739, 2714, 2701, 2701, 2701, 2710, 2764, 2967, 2967, 2967, 2943, 2940, 2940, 2940, 2952, 2955, 2961, 2964, 2967, 2969, 2977, 2984, 2985, 2989, 2995, 3010, 3011, 3018, 3019, 3020, 3022, 3034, 3042, 3043, 3063, 3067, 3068, 3079, 3086, 3089, 3090, 3117, 3118, 3124, 3139, 3140, 3141, 3144, 3153, 3168, 3170, 3180, 3182, 3188, 3202, 3209, 3238, 3241, 3247, 3255, 3258, 3268, 3285, 3288, 3304, 3307, 3313, 3331, 3345, 3352, 3364, 3365, 3379, 3392, 3393, 3414, 3425, 3438, 3451, 3470, 3478, 3489, 3497, 3506, 3519, 3528, 3535, 3547, 3571, 3583, 3645, 3867, 4399, 4473, 4477, 4491, 4516, 4531, 4534, 4568, 4577, 4607, 4629, 4638, 4663, 4680, 4698, 4718, 4735, 4764, 4795, 4813, 4814, 4843, 4867, 4888, 4911, 4928, 4963, 4984, 5004, 5019, 5049, 5049, 1395, 1363, 1350, 1350, 1338, 1331, 1328, 1321, 1316, 1313, 1308, 1305, 1304, 1294, 1294, 1293, 1291, 1287, 1279, 1275, 1273, 1267, 1260, 1259, 1249, 1248, 1247, 1240, 1235, 1231, 1217, 1217, 1212, 1212, 1209, 1209, 1209, 1204, 1192, 1192, 1192, 1190, 1190, 1190, 1188, 1180, 1174, 1174, 1164, 1163, 1160, 1160, 1154, 1154, 1150, 1137, 1137, 1137, 1140, 1140, 1140, 1126, 1126, 1126, 1126, 1126, 1126, 1115, 1108, 1108, 1108, 1108, 1108, 1106, 1106, 1102, 1101, 1101, 1101, 1095, 1093, 1093, 1092, 1088, 1086, 1085, 1068, 1068, 1068, 1077, 1077, 1077, 1073, 1071, 1071, 1063, 1062, 1057, 1055, 1054, 1055, 1055, 1054, 1053, 1051, 1051, 1051, 1055, 1055, 1055, 1046, 1044, 1044, 1044, 1045, 1045, 1045, 1033, 1033, 1033, 1033, 1033, 1037, 1033, 1033, 1037, 1032, 1031, 1031, 1031, 1027, 1026, 1024, 1024, 1025, 1025, 1025, 1025, 1025, 1023, 1025, 1028, 1028, 1027, 1027, 1003, 1003, 1003, 1014, 1024, 1024, 1024, 1018, 1017, 1017, 1018, 1020, 1020, 1020, 1020, 1020, 1021, 1023, 1026, 1026, 1025, 1025, 1025, 1021, 1021, 1020, 1020, 1020, 1019, 1020, 1020, 1023, 1023, 1024, 1025, 1024, 1021, 1024, 1023, 1017, 1023, 1026, 1023, 1027, 1033, 1033, 1027, 1027, 1027, 1024, 1024, 1024, 1024, 1029, 1029, 1031, 1032, 1032, 1032, 1032, 1036, 1038, 1041, 1041, 1041, 1039, 1039, 1039, 1034, 1035, 1040, 1035, 1035, 1038, 1040, 1043, 1045, 1045, 1046, 1048, 1048, 1049, 1063, 1063, 1063, 1058, 1058, 1058, 1062, 1063, 1068, 1068, 1068, 1071, 1072, 1072, 1074, 1075, 1080, 1075, 1075, 1075, 1082, 1084, 1085, 1085, 1088, 1091, 1096, 1098, 1099, 1099, 1101, 1101, 1101, 1109, 1109, 1109, 1110, 1110, 1110, 1116, 1118, 1123, 1124, 1127, 1131, 1131, 1134, 1132, 1134, 1143, 1143, 1143, 1145, 1162, 1162, 1162, 1162, 1166, 1166, 1166, 1180, 1180, 1185, 1187, 1186, 1186, 1187, 1195, 1197, 1197, 1200, 1201, 1208, 1219, 1228, 1228, 1229, 1230, 1230, 1239, 1240, 1245, 1249, 1252, 1256, 1262, 1275, 1275, 1275, 1275, 1279, 1296, 1296, 1297, 1303, 1306, 1318, 1320, 1323, 1325, 1329, 1332, 1337, 1346, 1348, 1359, 1371, 1373, 1380, 1383, 1383, 1386, 1390, 1404, 1405, 1414, 1415, 1417, 1429, 1437, 1444, 1444, 1448, 1454, 1470, 1477, 1479, 1487, 1487, 1487]
                
                let distancesRaw = [2468, 2505, 2602, 2928, 2928, 2928, 2914, 2896, 2876, 2865, 2846, 2831, 2820, 2805, 2787, 2777, 2759, 2750, 2742, 2738, 817, 789, 769, 762, 744, 743, 743, 740, 736, 730, 730, 730, 730, 730, 731, 735, 738, 744, 744, 746, 746, 746, 746, 746, 747, 750, 751, 757, 757, 760, 760, 757, 757, 758, 758, 761, 772, 775, 772, 775, 805, 2506, 2506, 2506, 2502, 2473, 2466, 2465, 2460, 2450, 2438, 2437, 2434, 2433, 2433, 2423, 2407, 904, 881, 872, 864, 864, 846, 846, 846, 846, 843, 844, 843, 842, 839, 834, 834, 839, 839, 833, 842, 840, 840, 841, 847, 848, 853, 855, 855, 855, 862, 864, 868, 881, 902, 2199, 2199, 2199, 2190, 2183, 2182, 2170, 2159, 2159, 2155, 2153, 2148, 2137, 2128, 2126, 2123, 2117, 2117, 2117, 2116, 2113, 2105, 2104, 2096, 2095, 2088, 2083, 2082, 2082, 2082, 2074, 2074, 2074, 2073, 2067, 2067, 2067, 2067, 2069, 2069, 2069, 2067, 2065, 2063, 2057, 2053, 2053, 2051, 1897, 1878, 1878, 1876, 1875, 1874, 1874, 1872, 1869, 1872, 1869, 1869, 1864, 1864, 1864, 1864, 1865, 1866, 1865, 1864, 1864, 1864, 1858, 1858, 1854, 1854, 1854, 1854, 1852, 1852, 1847, 1847, 1847, 1850, 1854, 1854, 1850, 1856, 1858, 1846, 1846, 1846, 1846, 1846, 1850, 1852, 1852, 1854, 1852, 1850, 1850, 1850, 1850, 1854, 1854, 1851, 1852, 1851, 1846, 1846, 1848, 1846, 1848, 1848, 1850, 1850, 1850, 1836, 1800, 1745, 1671, 1568, 1496, 1429, 1406, 1399, 1397, 1399, 1399, 1399, 1401, 1401, 1404, 1405, 1405, 1398, 1405, 1406, 1406, 1407, 1409, 1409, 1408, 1409, 1411, 1411, 1420, 1423, 1424, 1426, 1424, 1430, 1430, 1423, 1423, 1425, 1425, 1431, 1435, 1439, 1439, 1440, 1440, 1449, 1449, 1449, 1447, 1447, 1447, 1456, 1459, 1460, 1460, 1464, 1468, 1474, 1476, 1478, 1483, 1483, 1486, 1486, 1486, 1495, 1496, 1498, 1498, 1498, 1498, 1503, 1503, 1510, 1514, 1516, 1523, 1527, 1530, 1530, 1534, 1537, 1538, 1538, 1545, 1545, 1545, 1550, 1556, 1562, 1569, 1572, 1572, 1572, 1572, 1588, 1589, 1591, 1591, 1592, 1602, 1605, 1616, 1623, 1623, 1623, 1630, 1643, 1652, 1653, 1655, 1656, 1658, 1659, 1673, 1673, 1680, 1681, 1687, 1696, 1697, 1699, 1711, 1724, 1727, 1728, 1728, 1735, 1751, 1754, 1756, 1757, 1760, 1760, 1789, 1793, 1793, 1804, 1812, 1813, 1814, 1829, 1831, 1836, 1846, 1851, 1872, 1877, 1877, 1883, 1894, 1901, 1908, 1921, 1926, 1938, 1942, 1947, 1950, 1952, 1978, 1979, 1994, 1998, 2014, 2019, 2081, 5325, 5325, 5308, 5279, 5260, 5243, 5232, 5195, 5183, 5170, 5144, 5117, 5092, 5087, 5076, 5059, 5031, 5008, 5003, 4980, 4966, 4957, 4929, 4918, 4903, 4889, 4880, 4844, 4830, 4825, 4808, 4805, 4781, 4763, 4748, 4741, 4739, 4718, 4707, 4691, 4664, 4657, 4639, 4635, 4630, 4628, 4605, 4577, 4567, 4560, 4552, 4538, 4533, 4514, 4501, 4498, 4496, 4485, 4470, 4442, 4433, 4427, 4416, 4411, 4406, 4393, 4378, 4367, 4360, 4355, 4346, 4337, 4337, 4332, 4314, 4307, 4281, 4280, 4278, 4277, 4273, 4247, 4242, 4232, 4229, 4225, 4224, 4218, 4208, 4202, 4191, 4185, 4185, 4185, 4194, 4236, 4282, 4362, 4407, 4466, 4542, 4595, 4659, 4735, 4802, 4887, 4956, 5046, 5118, 5146, 5150, 5146, 5140, 5127, 5090, 5087, 5087, 5094, 5094, 5084, 5082, 5076, 5075, 5065, 5065, 5055, 5055, 5046, 5047, 5035, 5034, 5034, 5021, 5017, 5014, 5012, 5010, 5009, 5002, 5002, 4992, 4992, 4992, 4991, 4990, 4981, 4979, 4979, 4979, 4979, 4977, 4973, 4966, 4959, 4959, 4959, 4959, 4965, 4965, 4965, 4965, 4965, 4961, 4961, 4965, 4964, 4964, 4964, 4964, 4962, 4956, 4956, 4955, 4954, 4956, 4955, 4949, 4955, 4955, 4955, 4949, 4799, 4521, 4503, 4491, 4266, 3899, 3806, 3774, 3774, 3774, 3773, 3773, 3767, 3764, 3764, 3763, 3763, 3757, 3756, 3754, 3754, 1709, 1683, 1678, 1677, 1668, 1651, 1641, 1641, 1641, 1643, 1655, 1658, 1658, 1658, 1661, 1665, 1672, 1672, 1682, 1684, 1687, 1690, 1697, 1697, 1699, 1700, 1709, 1711, 1712, 1717, 1717, 1719, 1726, 1730, 1730, 1726, 1716, 1595, 1537, 1495, 1460, 1443, 1441, 1413, 1404, 1374, 1355, 1332, 1327, 1306, 1285, 1275, 1256, 1251, 1234, 1227, 1196, 1193, 1187, 1173, 1155, 1141, 1126, 1116, 1107, 1093, 1086, 1069, 1065, 1058, 1038, 1031, 1014, 1012, 1008, 995, 982, 970, 968, 965, 954, 951, 937, 930, 929, 925, 913, 897, 890, 888, 882, 864, 863, 861, 855, 846, 845, 835, 829, 824, 824, 824, 810, 802, 785, 785, 789, 789, 781, 781, 772, 762, 760, 758, 756, 748, 731, 731, 731, 729, 726, 720, 717, 706, 703, 696, 696, 696, 694, 686, 678, 678, 678, 678, 678, 677, 660, 660, 660, 659, 653, 651, 649, 648, 645, 644, 638, 625, 625, 625, 625, 625, 623, 615, 609, 609, 607, 604, 604, 604, 604, 603, 597, 595, 588, 588, 585, 588, 588, 585, 575, 575, 570, 575, 570, 571, 571, 571, 571, 571, 571, 567, 567, 565, 562, 561, 548, 548, 548, 548, 548, 543, 534, 531, 531, 531, 532, 532, 532, 530, 525, 525, 525, 525, 520, 520, 513, 513, 513, 513, 513, 513, 510, 507, 507, 501, 501, 501, 497, 497, 497, 504, 504, 504, 504, 503, 487, 487, 487, 497, 497, 497, 491, 490, 490, 490, 489, 489, 489, 489, 482, 480, 478, 477, 477, 477, 478, 480, 489, 489, 490, 490, 492, 493, 501, 515, 519, 522, 539, 550, 554, 569, 572, 587, 593, 597, 597, 612, 628, 638, 650, 665, 669, 674, 690, 714, 729, 733, 736, 757, 768, 777, 795, 826, 841, 854, 873, 881, 914, 950, 961, 981, 1013, 1035, 1085, 1085, 1087, 1093, 1096, 1096, 1093, 1092, 1092, 1092, 1097, 1097, 1097, 1091, 1091, 1090, 1090, 1090, 1094, 1093, 1093, 1093, 1087, 1087, 1087, 1088, 1092, 1098, 1098, 1096, 1096, 1091, 1089, 1089, 1087, 1087, 1087, 1087, 1088, 1088, 1088, 1088, 1088, 1084, 1088, 1084, 1084, 1084, 1089, 1080, 1088, 1085, 1088, 1088, 1093, 1093, 1093, 1093, 1092, 1089, 1089, 1092, 1092, 1094, 1099, 1099, 1099, 1094, 1094, 1092, 1092, 1092, 1098, 1099, 1099, 1107, 1103, 1106, 1106, 1106, 1106, 1106, 1110, 1106, 1106, 1106, 1106, 1106, 1110, 1111, 1114, 1114, 1123, 1123, 1123, 1123, 1118, 1118, 1118, 1126, 1126, 1129, 1136, 1136, 1136, 1137, 1139, 1139, 1139, 1146, 1140, 1140, 1148, 1148, 1141, 1149, 1149, 1149, 1150, 1150, 1151, 1151, 1152, 1157, 1158, 1162, 1162, 1172, 1172, 1172, 1172, 1172, 1182, 1182, 1183, 1183, 1183, 1183, 1187, 1188, 1199, 1201, 1201, 1205, 1209, 1211, 1216, 1219, 1220, 1220, 1220, 1222, 1222, 1233, 1237, 1244, 1244, 1244, 1244, 1244, 1245, 1250, 1259, 1263, 1264, 1264, 1268, 1270, 1277, 1278, 1280, 1290, 1290, 1296, 1302, 1308, 1308, 1308, 1310, 1318, 1324, 1329, 1335, 1336, 1336, 1337, 1341, 1344, 1358, 1358, 1344]
                
                let distances = distancesRaw.map { UInt16($0) }
                
                let data = distances.withUnsafeBufferPointer({ buffer in
                    return Data(buffer: buffer)
                })
                
                timer = Timer.scheduledTimer(withTimeInterval: scanInterval, repeats: true) { timer in
                    block(data)
                }
                
                return
            }
            
            var distances = Array<Int>(repeating: 0, count: Int(urg_max_data_size(&urg)))
            
            timer = Timer.scheduledTimer(withTimeInterval: scanInterval, repeats: true) { [unowned self] timer in
                
                // Start measurement for 1 scan and retreive data
                
                // NOTE: We choose 1 scan instead of URG_SCAN_INFINITY because URG_SCAN_INFINITY requires really aggressive polling of the device
                // If this timer block were occasionally skipped, the laser would get farther and farther ahead of the computer, filling up an internal buffer in the laser
                // This would cause our data to fall farther and farther out of sync until the laser's internal buffer overflowed causing an error
                // This method avoids that problem by only asking for one scan at a time and then immediately pulling the data
                
                urg_start_measurement(&self.urg, URG_DISTANCE, 1, 0)
                let sampleCount = Int(urg_get_distance(&self.urg, &distances, nil))
                
                guard sampleCount > 0 else {
                    print("LASER ERROR: \(sampleCount)")
                    // TODO: close and reopen
                    return
                }
                
                let data = distances.prefix(upTo: sampleCount).map { UInt16($0) }.withUnsafeBufferPointer { buffer in
                    return Data(buffer: buffer)
                }
                
                block(data)
            }
        }
        
        deinit {
            
            timer.invalidate()
            
            urg_close(&urg)
            
            ProcessInfo.processInfo.endActivity(activity)
        }
    }
    
    private var continuousMeasurement: ContinuousMeasurement?
    
    // Distances in millimeters
    func measureContinuously(scanInterval: TimeInterval, block: @escaping (Data) -> Void) {
        
        continuousMeasurement = ContinuousMeasurement(scanInterval: scanInterval, block: block)
    }
    
    func stopMeasuring() {
        
        continuousMeasurement = nil
    }
}
